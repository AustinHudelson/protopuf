name: BuildAndTest

on:
  push:
    paths-ignore:
      - 'README.md'
      - '.gitignore'
      - 'asset/**'
      - 'LICENSE'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            type: Debug
            cxx: gcc
          - os: ubuntu-20.04
            type: Release
            cxx: gcc
            coverage: -DCMAKE_CXX_FLAGS=--coverage
          - os: ubuntu-20.04
            type: Debug
            cxx: clang
          - os: ubuntu-20.04
            type: Release
            cxx: clang
    
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: install build tools (gcc)
        run: |
          wget -q http://kayari.org/gcc-latest/gcc-latest.deb
          sudo dpkg -i gcc-latest.deb
          echo "/opt/gcc-latest/bin" >> $GITHUB_PATH
          sudo rm -rf /usr/local/bin/gcov /usr/local/lib/gcc
          echo "CC=/opt/gcc-latest/bin/gcc" >> $GITHUB_ENV
          echo "CXX=/opt/gcc-latest/bin/g++" >> $GITHUB_ENV
          echo "LD_RUN_PATH=/opt/gcc-latest/lib64" >> $GITHUB_ENV
        if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.cxx == 'gcc' }}
      - name: install build tools (clang)
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 12
          echo "CC=`which clang-12`" >> $GITHUB_ENV
          echo "CXX=`which clang++-12`" >> $GITHUB_ENV
        if: ${{ startsWith(matrix.os, 'ubuntu') && matrix.cxx == 'clang' }}
      - name: install coverage tools
        run: sudo apt install lcov
        if: ${{ matrix.coverage }}
      - name: install tools
        run: brew install gcc
        if: ${{ startsWith(matrix.os, 'macos') }}
      - name: generate build script
        run: cmake -DCMAKE_BUILD_TYPE=${{ matrix.type }} ${{ matrix.gtest }} ${{ matrix.coverage }} .
      - name: build project
        run: cmake --build . --config ${{ matrix.type }}
      - name: run unit testing
        run: ctest
      - name: capture coverage
        run: lcov --directory . --capture --output-file coverage.info
        if: ${{ matrix.coverage }}
      - name: upload coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.info
        if: ${{ matrix.coverage }}
